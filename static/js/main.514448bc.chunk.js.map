{"version":3,"sources":["components/User.tsx","components/Todo.tsx","components/TodoList.tsx","components/api.ts","App.tsx","index.tsx"],"names":["User","name","Todo","todo","completed","title","user","TodoList","props","preparedTodos","className","map","item","key","id","todosWithUsers","a","fetch","then","response","json","users","todos","data","find","userId","App","useState","isLoaded","setLoaded","isLoading","setIsLoading","setTodos","sortedTodos","setSortedTodos","handleButtonClick","onClick","sort","b","localeCompare","Number","type","disabled","ReactDOM","render","document","getElementById"],"mappings":"0RAEaA,G,MAA6C,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACxD,4BAAKA,KCCMC,EAAyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACpD,4BACE,4BAAKA,EAAKC,UAAY,OAAS,eAC/B,4BAAKD,EAAKE,OACV,kBAAC,EAAD,CAAMJ,KAAME,EAAKG,KAAKL,SCuBXM,EA3B6C,SAACC,GAAW,IAC9DC,EAAkBD,EAAlBC,cAER,OACE,oCACE,2BAAOC,UAAU,SACf,iCAAS,8CACT,+BACE,4BACE,sCACA,qCACA,sCAGJ,+BACGD,EAAcE,KAAI,SAAAC,GAAI,OACrB,kBAAC,EAAD,CACET,KAAMS,EACNC,IAAKD,EAAKE,Y,OCVXC,EAAc,uCAAG,8BAAAC,EAAA,sEAN5BC,MAJgB,2CAICC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAMf,cACtBC,EADsB,gBAH5BJ,MANgB,2CAMCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGf,cAEtBE,EAFsB,yBAGpBA,EAAMC,KACXZ,KAAI,SAACR,GAAD,mBAAC,eAAmBA,GAApB,IAA0BG,KAAMe,EAAME,KAAKC,MAAK,SAAClB,GAAD,OAAgBA,EAAKQ,KAAOX,EAAKsB,gBAJ5D,2CAAH,qDCyDZC,EA9DO,WAAO,IAAD,EACIC,oBAAS,GADb,mBACnBC,EADmB,KACTC,EADS,OAEQF,oBAAS,GAFjB,mBAEnBG,EAFmB,KAERC,EAFQ,OAGAJ,mBAAyB,IAHzB,mBAGnBL,EAHmB,KAGZU,EAHY,OAIYL,mBAAyB,IAJrC,mBAInBM,EAJmB,KAINC,EAJM,KAMpBC,EAAiB,uCAAG,sBAAAnB,EAAA,6DACxBe,GAAa,GADW,SAGlBhB,IAAiBG,MAAK,SAAAK,GAAI,OAAIS,EAAST,MAHrB,uBAIlBR,IAAiBG,MAAK,SAAAK,GAAI,OAAIW,EAAeX,MAJ3B,OAMxBM,GAAU,GANc,2CAAH,qDA2BvB,OACE,yBAAKnB,UAAU,OACb,oDACEkB,EAWA,oCACA,yBAAKlB,UAAU,YACb,4BAAQA,UAAU,mBAAmB0B,QAlCzB,WAClB,IAAMH,EAAc,YAAIX,GAAOe,MAAK,SAACrB,EAAEsB,GAAH,OAAStB,EAAEX,MAAMkC,cAAcD,EAAEjC,UACrE6B,EAAeD,KAgCT,iBACA,4BAAQvB,UAAU,mBAAmB0B,QA9BrB,WACtB,IAAMH,EAAc,YAAIX,GAAOe,MAAK,SAACrB,EAASsB,GAC5C,OAAQE,OAAOxB,EAAEZ,WAAaoC,OAAOF,EAAElC,cAEzC8B,EAAeD,KA0BT,qBACA,4BAAQvB,UAAU,mBAAmB0B,QAxB1B,WACjB,IAAMH,EAAc,YAAIX,GAAOe,MAAK,SAACrB,EAAEsB,GAAH,OAAStB,EAAEV,KAAKL,KAAKsC,cAAcD,EAAEhC,KAAKL,SAC9EiC,EAAeD,KAsBT,iBAEJ,yBAAKvB,UAAU,WACb,kBAAC,EAAD,CAAUD,cAAewB,MAjBzB,oCACG,4BACCQ,KAAK,SACLL,QAASD,EACTO,SAAUZ,GAERA,EAAY,aAAe,WC9CzCa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.514448bc.chunk.js","sourcesContent":["import React from 'react';\n\nexport const User: React.FC<{name: string | undefined}> = ({ name }) => (\n  <td>{name}</td>\n);\n","import React from 'react';\nimport { User } from './User';\nimport { PreparedTodo } from './types';\n\nexport const Todo: React.FC< {todo: PreparedTodo} > = ({ todo }) => (\n  <tr>\n    <td>{todo.completed ? 'Done' : 'In progress'}</td>\n    <td>{todo.title}</td>\n    <User name={todo.user.name} />\n  </tr>\n);\n","import React from 'react';\nimport { Todo } from './Todo';\nimport { PreparedTodo } from './types';\n\nconst TodoList: React.FC<{preparedTodos: PreparedTodo[]}> = (props) => {\n  const { preparedTodos } = props;\n\n  return (\n    <>\n      <table className=\"table\">\n        <caption><strong>ToDo List</strong></caption>\n        <thead>\n          <tr>\n            <th>Status</th>\n            <th>Title</th>\n            <th>User</th>\n          </tr>\n        </thead>\n        <tbody>\n          {preparedTodos.map(item => (\n            <Todo\n              todo={item}\n              key={item.id}\n            />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default TodoList;\n","import { User, Todo } from \"./types\";\n\nconst API_USERS = 'https://mate.academy/students-api/users';\nconst API_TODOS = 'https://mate.academy/students-api/todos';\n\nexport const loadUsers = () => (\n  fetch(API_USERS).then(response => response.json()));\n\nexport const loadTodos = () => (\n  fetch(API_TODOS).then(response => response.json())\n)\n\nexport const todosWithUsers = async () => {\n  const users = await loadUsers();\n  const todos = await loadTodos();\n  return (todos.data\n    .map((todo: Todo) =>({...todo, user: users.data.find((user: User) => user.id === todo.userId)})))\n}\n\n","import React, {useState} from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\nimport { PreparedTodo, Todo } from './components/types';\nimport { todosWithUsers } from './components/api'\n\n\nconst App: React.FC = () => {\n  const [isLoaded, setLoaded] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [todos, setTodos] = useState<PreparedTodo[]>([]);\n  const [sortedTodos, setSortedTodos] = useState<PreparedTodo[]>([]);\n\n  const handleButtonClick = async () => {\n    setIsLoading(true);\n\n    await todosWithUsers().then(data => setTodos(data));\n    await todosWithUsers().then(data => setSortedTodos(data));\n\n    setLoaded(true);\n  };\n\n  const sortByTitle = () => {\n    const sortedTodos = [...todos].sort((a,b) => a.title.localeCompare(b.title));\n    setSortedTodos(sortedTodos);\n  }\n\n  const sortByCompleted = () => {\n    const sortedTodos = [...todos].sort((a: Todo, b: Todo) => {\n      return( Number(a.completed) - Number(b.completed))\n    });\n    setSortedTodos(sortedTodos);\n  }\n\n  const sortByName = () => {\n    const sortedTodos = [...todos].sort((a,b) => a.user.name.localeCompare(b.user.name));\n    setSortedTodos(sortedTodos);\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>Static list of todos</h1>\n      {!isLoaded ? (\n        <>\n           <button\n            type=\"button\"\n            onClick={handleButtonClick}\n            disabled={isLoading}\n           >\n             {isLoading ? \"loading...\" : \"Load\"}\n           </button>\n      </>\n      ) : (\n        <>\n        <div className=\"controls\">\n          <button className=\"controls__button\" onClick={sortByTitle}>Sort by Title</button>\n          <button className=\"controls__button\" onClick={sortByCompleted}>Sort by Completed</button>\n          <button className=\"controls__button\" onClick={sortByName}>Sort by Name</button>\n        </div>\n      <div className=\"content\">\n        <TodoList preparedTodos={sortedTodos} />\n      </div>\n    </>\n  )}\n  </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}